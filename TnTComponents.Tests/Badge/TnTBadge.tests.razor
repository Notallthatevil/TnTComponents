
// @using Bunit (removed duplicate)
@using TnTComponents
@inherits Bunit.TestContext

@code {
    [Fact]
    public void TnTBadge_Renders_BasicBadge()
    {
        // Arrange
        // (No setup needed)

        // Act
        var cut = Render(@<TnTBadge>Badge</TnTBadge>);

        // Assert
        cut.Markup.Should().Contain("Badge");
    }

    [Fact]
    public void TnTBadge_Renders_WithColor()
    {
        // Arrange
        // (No setup needed)

        // Act
        var cut = Render(@<TnTBadge Color="TnTColor.Primary">Colored</TnTBadge>);

        // Assert
        cut.Markup.Should().Contain("Colored");
        cut.Markup.Should().Contain("tnt-bg-color-primary");
    }

    [Fact]
    public void TnTBadge_Renders_WithValue()
    {
        // Arrange
        // (No setup needed)

        // Act
        var cut = Render(@<TnTBadge Value="99">Value</TnTBadge>);

        // Assert
        cut.Markup.Should().Contain("99");
        cut.Markup.Should().Contain("Value");
    }

    [Fact]
    public void TnTBadge_Renders_EmptyBadge()
    {
        // Arrange
        // (No setup needed)

        // Act
        var cut = Render(@<TnTBadge />);

        // Assert
        cut.Markup.Should().Contain("tnt-badge");
    }

    [Fact]
    public void TnTBadge_Renders_WithSecondaryColor()
    {
        // Arrange
        // (No setup needed)

        // Act
        var cut = Render(@<TnTBadge Color="TnTColor.Secondary">Secondary</TnTBadge>);

        // Assert
        cut.Markup.Should().Contain("Secondary");
        cut.Markup.Should().Contain("tnt-bg-color-secondary");
    }

    [Fact]
    public void TnTBadge_Renders_WithLargeValue()
    {
        // Arrange
        // (No setup needed)

        // Act
        var cut = Render(@<TnTBadge Value="9999">Big</TnTBadge>);

        // Assert
        cut.Markup.Should().Contain("9999");
        cut.Markup.Should().Contain("Big");
    }
}
