@using Bunit
@using TnTComponents
@using TnTComponents.Accordion
@inherits Bunit.TestContext

@code {
    [Fact]
    public void TnTAccordionChild_Renders_WithLabel()
    {
        // Arrange
        var label = "Child Label";

        // Act
        var cut = Render(@<TnTAccordionChild Label="@label">Content</TnTAccordionChild>);

        // Assert
        cut.Markup.Should().Contain(label);
        cut.Markup.Should().Contain("tnt-accordion-child");
    }

    [Fact]
    public void TnTAccordionChild_Renders_Disabled()
    {
        // Arrange
        var label = "Disabled Child";

        // Act
        var cut = Render(@<TnTAccordionChild Label="@label" Disabled="true">Content</TnTAccordionChild>);

        // Assert
        cut.Markup.Should().Contain("disabled");
    }

    [Fact]
    public void TnTAccordionChild_Renders_WithHeaderColors()
    {
        // Arrange
        var label = "Header Colors";

        // Act
        var cut = Render(@<TnTAccordionChild Label="@label" HeaderBodyColor="TnTColor.Primary" HeaderTextColor="TnTColor.OnPrimary">Content</TnTAccordionChild>);

        // Assert
        cut.Markup.Should().Contain(label);
        cut.Markup.Should().Contain("tnt-accordion-child");
    }

    [Fact]
    public void TnTAccordionChild_Renders_OpenByDefault()
    {
        // Arrange
        var label = "Open Child";

        // Act
        var cut = Render(@<TnTAccordionChild Label="@label" OpenByDefault="true">Content</TnTAccordionChild>);

        // Assert
        cut.Markup.Should().Contain(label);
        cut.Markup.Should().Contain("tnt-accordion-child");
    }
}
