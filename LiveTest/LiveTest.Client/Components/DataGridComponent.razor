@using Microsoft.AspNetCore.Components.QuickGrid
@using TnTComponents
@using TnTComponents.Snackbar

<TnTDataGrid Items="@Items" TItem="DataGridItem" RowClickedCallback="RowClicked" Appearance="DataGridAppearance.Stripped | DataGridAppearance.Compact">
    <TnTPropertyColumn Property="@(x => x.Column1)" Sortable="true" />
    <TnTPropertyColumn Property="@(x => x.Column2)" Sortable="true" />
    <TnTPropertyColumn Property="@(x => x.Column3)" Format="MM/yyyy" />
    <TnTTemplateColumn>
        <RowTemplate>
            <TnTButton OnClick="() => ItemClicked(context)" Appearance="ButtonAppearance.Text" StopPropagation="true">
                @MaterialIcon.Edit.Render()
                Edit
            </TnTButton>
        </RowTemplate>
    </TnTTemplateColumn>
</TnTDataGrid>


@code {
    [Inject]
    private TnTSnackbarService _service { get; set; }


    private IQueryable<DataGridItem>? Items;
    private static object _locker = new();
    private static List<DataGridItem> _items;
    protected override Task OnInitializedAsync() {
        lock (_locker) {
            if (_items == null) {
                var list = new List<DataGridItem>();
                foreach (var i in Enumerable.Range(1, 100)) {
                    list.Add(new DataGridItem() {
                            Column1 = Random.Shared.Next(1, 1000),
                            Column2 = Guid.NewGuid().ToString(),
                            Column3 = new DateTime(Random.Shared.Next(1, 10000), Random.Shared.Next(1, 13), Random.Shared.Next(1, 29))
                        });
                }
                _items = list;
            }
            Items = _items.AsQueryable();
        }
        return Task.CompletedTask;
    }

    private async Task RowClicked(DataGridItem item) {
        await _service.ShowAsync("Row clicked", item.Column1.ToString());
    }

    private async Task ItemClicked(DataGridItem item) {
        await _service.ShowAsync("Item clicked", item.Column2);
    }

    public class DataGridItem {

        public int Column1 { get; set; }

        public string Column2 { get; set; } = default!;

        public DateTime Column3 { get; set; }
    }


}