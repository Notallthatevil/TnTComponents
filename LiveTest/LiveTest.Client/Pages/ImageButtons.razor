@page "/ImageButtons"
@using TnTComponents
@rendermode InteractiveAuto

<select @bind="Appearance">
    @foreach (var appearance in Enum.GetValues<ButtonAppearance>().Distinct()) {
        <option value="@appearance">@appearance</option>
    }
</select>

<select @bind="Shape">
    @foreach (var shape in Enum.GetValues<ButtonShape>().Distinct()) {
        <option value="@shape">@shape</option>
    }
</select>


<select @bind="ImageButtonAppearance">
    @foreach (var appearance in Enum.GetValues<ImageButtonAppearance>().Distinct()) {
        <option value="@appearance">@appearance</option>
    }
</select>

<label>
    <input type="checkbox" @bind="Disabled" />
    Disabled
</label>



<TnTDivider style="margin-top:36px;margin-bottom:36px;" />
<TnTRow>
    <TnTColumn S="12">
        <TnTImageButton ButtonSize="@Size.XS" ImageButtonAppearance="@ImageButtonAppearance" Appearance="@Appearance" Shape="@Shape" Disabled="Disabled" TextColor="@(Appearance == ButtonAppearance.Filled || Appearance == ButtonAppearance.Elevated ? TnTColor.OnPrimary : TnTColor.OnSurface)" Icon="@MaterialIcon.Edit"/>

        <TnTImageButton ButtonSize="@Size.Small" ImageButtonAppearance="@ImageButtonAppearance" Appearance="@Appearance" Shape="@Shape" Disabled="Disabled" TextColor="@(Appearance == ButtonAppearance.Filled || Appearance == ButtonAppearance.Elevated ? TnTColor.OnPrimary : TnTColor.OnSurface)" Icon="@MaterialIcon.Edit" />

        <TnTImageButton ButtonSize="@Size.Medium" ImageButtonAppearance="@ImageButtonAppearance" Appearance="@Appearance" Shape="@Shape" Disabled="Disabled" TextColor="@(Appearance == ButtonAppearance.Filled || Appearance == ButtonAppearance.Elevated ? TnTColor.OnPrimary : TnTColor.OnSurface)" Icon="@MaterialIcon.Edit" />

        <TnTImageButton ButtonSize="@Size.Large" ImageButtonAppearance="@ImageButtonAppearance" Appearance="@Appearance" Shape="@Shape" Disabled="Disabled" TextColor="@(Appearance == ButtonAppearance.Filled || Appearance == ButtonAppearance.Elevated ? TnTColor.OnPrimary : TnTColor.OnSurface)" Icon="@MaterialIcon.Edit" />

        <TnTImageButton ButtonSize="@Size.Largest" ImageButtonAppearance="@ImageButtonAppearance" Appearance="@Appearance" Shape="@Shape" Disabled="Disabled" TextColor="@(Appearance == ButtonAppearance.Filled || Appearance == ButtonAppearance.Elevated ? TnTColor.OnPrimary : TnTColor.OnSurface)" Icon="@MaterialIcon.Edit" />
    </TnTColumn>
</TnTRow>
<TnTRow>
    <TnTColumn S="12">
        <TnTImageButton Badge="@TnTBadge.CreateBadge("100")" ButtonSize="@Size.XS" ImageButtonAppearance="@ImageButtonAppearance" Appearance="@Appearance" Shape="@Shape" Disabled="Disabled" TextColor="@(Appearance == ButtonAppearance.Filled || Appearance == ButtonAppearance.Elevated ? TnTColor.OnPrimary : TnTColor.OnSurface)" Icon="@MaterialIcon.Edit" />

        <TnTImageButton Badge="@TnTBadge.CreateBadge("100")" ButtonSize="@Size.Small" ImageButtonAppearance="@ImageButtonAppearance" Appearance="@Appearance" Shape="@Shape" Disabled="Disabled" TextColor="@(Appearance == ButtonAppearance.Filled || Appearance == ButtonAppearance.Elevated ? TnTColor.OnPrimary : TnTColor.OnSurface)" Icon="@MaterialIcon.Edit" />

        <TnTImageButton Badge="@TnTBadge.CreateBadge("100")" ButtonSize="@Size.Medium" ImageButtonAppearance="@ImageButtonAppearance" Appearance="@Appearance" Shape="@Shape" Disabled="Disabled" TextColor="@(Appearance == ButtonAppearance.Filled || Appearance == ButtonAppearance.Elevated ? TnTColor.OnPrimary : TnTColor.OnSurface)" Icon="@MaterialIcon.Edit" />

        <TnTImageButton Badge="@TnTBadge.CreateBadge("100")" ButtonSize="@Size.Large" ImageButtonAppearance="@ImageButtonAppearance" Appearance="@Appearance" Shape="@Shape" Disabled="Disabled" TextColor="@(Appearance == ButtonAppearance.Filled || Appearance == ButtonAppearance.Elevated ? TnTColor.OnPrimary : TnTColor.OnSurface)" Icon="@MaterialIcon.Edit" />

        <TnTImageButton Badge="@TnTBadge.CreateBadge("100")" ButtonSize="@Size.Largest" ImageButtonAppearance="@ImageButtonAppearance" Appearance="@Appearance" Shape="@Shape" Disabled="Disabled" TextColor="@(Appearance == ButtonAppearance.Filled || Appearance == ButtonAppearance.Elevated ? TnTColor.OnPrimary : TnTColor.OnSurface)" Icon="@MaterialIcon.Edit" />
    </TnTColumn>
</TnTRow>

@code {


    private ButtonAppearance Appearance { get; set; } = ButtonAppearance.Filled;

    private ButtonShape Shape { get; set; } = ButtonShape.Round;

    private ImageButtonAppearance ImageButtonAppearance { get; set; } = ImageButtonAppearance.Round;

    private bool Disabled { get; set; }

    private bool StartIcon { get; set; }

    private bool EndIcon { get; set; }
}
