@page "/forms"
@    using LiveTest.Client.Components
@    using Microsoft.AspNetCore.Components.Rendering
@    using System.ComponentModel.DataAnnotations
@    using TnTComponents
@    using TnTComponents.Enum
@    using TnTComponents.Forms


<CascadingValue Value="@Model" IsFixed="false">
    <TnTRow>
        <TnTColumn S="6">
            <TnTForm Model="@Model" FormType="FormType.Outlined" FormName="Form1">
                <DataAnnotationsValidator />
                <RadioFields />
                <TnTButton Title="Submit" Type="ButtonType.Submit">
                    Submit
                </TnTButton>
            </TnTForm>
        </TnTColumn>
        <TnTColumn S="6">
            <TnTForm Model="@Model" FormType="FormType.Filled" FormName="Form2">
                <DataAnnotationsValidator />
                <RadioFields />
                <TnTButton Title="Submit" Type="ButtonType.Submit">
                    Submit
                </TnTButton>
            </TnTForm>
        </TnTColumn>
    </TnTRow>
</CascadingValue>



@code {

    [SupplyParameterFromForm(FormName = "Form1")]
    public InputClass Model { get; set; }

    protected override void OnInitialized() {
        base.OnInitialized();
        Model = new InputClass();
    }

    public class InputClass {
        [Required]
        [StringLength(10, MinimumLength = 2)]
        public string? StringValue { get; set; }

        [Required]
        [StringLength(30, MinimumLength = 5)]
        public string? EmailValue { get; set; }

        [Required]
        [StringLength(16, MinimumLength = 5)]
        public string? PasswordValue { get; set; }

        [Required]
        [StringLength(10, MinimumLength = 10)]
        public string? TelValue { get; set; }

        [Required]
        [StringLength(50, MinimumLength = 8)]
        public string? UrlValue { get; set; }

        [Required]
        public bool Checkbox { get; set; }

        [Required]
        public bool Switch { get; set; }

        [Required]
        public DateOnly? DateValue { get; set; }

        [Required]
        public TimeOnly? TimeValue { get; set; }

        [Required]
        public DateTime? DateTimeValue { get; set; }

        [Required]
        [Range(1, 10)]
        public int IntValue { get; set; }

        [Required]
        [Range(0.9, 10.1)]
        public double DoubleValue { get; set; }

        [Required]
        public int? SelectValue { get; set; }

        [Required]
        public int? RadioOption { get; set; }
    }
}