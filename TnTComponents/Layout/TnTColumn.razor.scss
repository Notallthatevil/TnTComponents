@use '../Styles/_Variables/_measurements.scss' as measurements;


.tnt-col {
    float: left;
    box-sizing: border-box;
    padding: 0 measurements.$gutter-width / 2;
    min-height: 1px;

    &[class*="push-"],
    &[class*="pull-"] {
        position: relative;
    }

    $i: 1;

    @while $i <= measurements.$num-cols {
        $perc: unquote((100 / (measurements.$num-cols / $i)) + "%");

        &.s#{$i} {
            width: $perc;
            @include measurements.reset-offset;
        }

        $i: $i + 1;
    }

    $i: 1;

    @while $i <= measurements.$num-cols {
        $perc: unquote((100 / (measurements.$num-cols / $i)) + "%");
        @include measurements.grid-classes("s", $i, $perc);
        $i: $i + 1;
    }

    @media #{measurements.$medium-and-up} {
        $i: 1;

        @while $i <= measurements.$num-cols {
            $perc: unquote((100 / (measurements.$num-cols / $i)) + "%");

            &.m#{$i} {
                width: $perc;
                @include measurements.reset-offset;
            }

            $i: $i + 1
        }

        $i: 1;

        @while $i <= measurements.$num-cols {
            $perc: unquote((100 / (measurements.$num-cols / $i)) + "%");
            @include measurements.grid-classes("m", $i, $perc);
            $i: $i + 1;
        }
    }

    @media #{measurements.$large-and-up} {
        $i: 1;

        @while $i <= measurements.$num-cols {
            $perc: unquote((100 / (measurements.$num-cols / $i)) + "%");

            &.l#{$i} {
                width: $perc;
                @include measurements.reset-offset;
            }

            $i: $i + 1;
        }

        $i: 1;

        @while $i <= measurements.$num-cols {
            $perc: unquote((100 / (measurements.$num-cols / $i)) + "%");
            @include measurements.grid-classes("l", $i, $perc);
            $i: $i + 1;
        }
    }

    @media #{measurements.$extra-large-and-up} {
        $i: 1;

        @while $i <= measurements.$num-cols {
            $perc: unquote((100 / (measurements.$num-cols / $i)) + "%");

            &.xl#{$i} {
                width: $perc;
                @include measurements.reset-offset;
            }

            $i: $i + 1;
        }

        $i: 1;

        @while $i <= measurements.$num-cols {
            $perc: unquote((100 / (measurements.$num-cols / $i)) + "%");
            @include measurements.grid-classes("xl", $i, $perc);
            $i: $i + 1;
        }
    }

    ::deep {
        .tnt-row {
            margin-left: (-1 * measurements.$gutter-width / 2);
            margin-right: (-1 * measurements.$gutter-width / 2);
        }
    }
}
