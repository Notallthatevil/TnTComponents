@namespace TnTComponents
@typeparam TInputType
@inherits TnTInputBase<TInputType>


<fieldset class="@ElementClass" title="@ElementTitle" lang="@ElementLang" id="@ElementId" style="@ElementStyle" @ref="Element">
    @if (StartIcon is not null) {
        @StartIcon.Render("tnt-start-icon")
    }

    <div class="tnt-radio-buttons">
        <CascadingValue Value="this" IsFixed="true">
            @ChildContent
        </CascadingValue>
    </div>

    @if (!string.IsNullOrWhiteSpace(SupportingText)) {
        <span class="tnt-supporting-text">
            @SupportingText
        </span>
    }
    @if (EditContext is not null && !DisableValidationMessage && ValueExpression is not null) {
        <ValidationMessage TValue="@TInputType" For="@ValueExpression" class="tnt-components tnt-supporting-text tnt-validation-message" style="color: var(--tnt-color-error)" />
    }

    @if (!string.IsNullOrWhiteSpace(Label)) {
        <legend class="tnt-label">
            @Label
        </legend>
    }

    @if (EndIcon is not null) {
        @EndIcon.Render("tnt-end-icon")
    }
</fieldset>
