@use '../Styles/_Variables/_colors.scss' as colors;
@use '../Styles/_Variables/_typescale.scss' as typescale;

$error-color: var(--tnt-input-error-color);
$text-color: var(--tnt-input-text-color);
$tint-color: var(--tnt-input-tint-color);
$background-color: var(--tnt-input-background-color);


.tnt-input {
    grid-template-areas: "switch";
    grid-template-columns: 52px;
    grid-template-rows: 48px;
    display: inline-grid;
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    cursor: pointer;
    min-width: 48px;
    min-height: 48px;
    position: relative;
    margin-bottom: 12px;

    &:has(.tnt-start-icon):has(.tnt-end-icon) {
        grid-template-areas: "start-icon switch end-icon";
        grid-template-columns: 24px 52px 24px;
    }

    &:has(.tnt-start-icon):not(:has(.tnt-end-icon)) {
        grid-template-areas: "start-icon switch";
        grid-template-columns: 24px 52px;
    }

    &:has(.tnt-end-icon):not(:has(.tnt-start-icon)) {
        grid-template-areas: "switch end-icon";
        grid-template-columns: 52px 24px;
    }

    &:has(.tnt-start-icon):has(.tnt-end-icon):has(.tnt-label) {
        grid-template-areas: "start-icon switch label pad1 end-icon";
        grid-template-columns: 24px 52px auto 12px 24px;
    }

    &:has(.tnt-start-icon):not(:has(.tnt-end-icon)):has(.tnt-label) {
        grid-template-areas: "start-icon switch label";
        grid-template-columns: 24px 52px auto;
    }

    &:has(.tnt-end-icon):not(:has(.tnt-start-icon)):has(.tnt-label) {
        grid-template-areas: "switch label pad1 end-icon";
        grid-template-columns: 52px auto 12px 24px;
    }

    &:has(.tnt-label):not(:has(.tnt-start-icon)):not(:has(.tnt-end-icon)) {
        grid-template-areas: "switch label";
        grid-template-columns: 52px auto;
    }

    .tnt-label {
        grid-area: label;
        justify-self: center;
        align-self: center;
        color: $text-color;

        @include typescale.tnt-body-large;
    }

    &:has(input[readonly]) {
        pointer-events: none;
        opacity: 0.7;
    }

    &.tnt-disabled {
        pointer-events: none;
        opacity: 0.5 !important;
        user-select: none;
    }

    input {
        appearance: none;
        grid-area: switch;
        position: absolute;
    }

    ::deep {
        .tnt-start-icon {
            grid-area: start-icon;
        }

        .tnt-end-icon {
            grid-area: end-icon;
        }

        .tnt-start-icon, .tnt-end-icon {
            align-self: center;
            justify-self: center;
        }

        .tnt-validation-message {
            position: absolute;
            bottom: -14px;
            left: 16px;
            white-space: nowrap;
            @include typescale.tnt-body-small;
        }

        @for $i from 1 through 5 {
            *:nth-child(#{$i} of .tnt-validation-message) {
                transform: translateY(calc(12px * ($i - 1))) !important;
            }
        }
    }

    .tnt-switch-overlay {
        position: absolute;
        grid-area: switch;
        width: 48px;
        height: 48px;
        border-radius: 50%;
        background-color: transparent;
        transition: 250ms ease-in-out;
        box-sizing: border-box;
        align-self: center;
        justify-self: center;
        transform: translateX(-10px);
        z-index: 2;
    }

    &:hover {
        .tnt-switch-overlay {
            background-color: color-mix(in srgb, colors.$tnt-color-scrim 20%, transparent);
        }
    }

    &:focus-within {
        .tnt-switch-overlay {
            border: 2px solid colors.$tnt-color-outline;
        }
    }

    &:before {
        content: '';
        grid-area: switch;
        height: 18px;
        width: 36px;
        background-color: red;
        transition: 250ms ease-in-out;
        border: 2px solid colors.$tnt-color-outline;
        background-color: $background-color;
        border-radius: 22px / 100%;
        align-self: center;
        justify-self: center;
        z-index: 1;
    }

    &:after {
        content: '';
        grid-area: switch;
        height: 12px;
        width: 12px;
        background-color: $tint-color;
        transition: 250ms ease-in-out;
        align-self: center;
        justify-self: center;
        border-radius: 50%;
        transform: translateX(-10px);
        z-index: 3;
    }

    &:has(input:checked) {
        &:before {
            background-color: $tint-color;
            border-color: $tint-color;
        }

        &:after {
            background-color: $background-color;
            transform: translateX(10px) scale(1.4);
        }

        .tnt-switch-overlay {
            transform: translateX(10px);
        }
    }

    &.modified.invalid {

        &:has(input:checked) {
            &:before {
                background-color: $error-color;
                border-color: $error-color;
            }
        }

        &:not(:has(input:checked)) {
            &:before {
                border-color: $error-color;
            }

            &:after {
                background-color: $error-color;
            }
        }

        &:hover {
            .tnt-switch-overlay {
                background-color: color-mix(in srgb, $error-color 20%, transparent);
            }
        }

        .tnt-label {
            color: $error-color;
        }

        ::deep {
            .tnt-end-icon {
                color: $error-color;
            }
        }
    }
}
