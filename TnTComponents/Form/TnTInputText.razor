@namespace TnTComponents
@using Microsoft.AspNetCore.Components.Rendering
@inherits TnTInputBase<string?>

@base.BuildRenderTree

@code {
    protected override void RenderInputElement(RenderTreeBuilder __builder) {
        @if (InputType == TextInputType.Tel) {
            <input type="@Type.ToInputTypeString()"
                   @attributes="AdditionalAttributes"
                   name="@ElementName"
                   title="@FieldIdentifier.FieldName"
                   autofocus="@AutoFocus"
                   autocomplete="@AutoComplete"
                   readonly="@FieldReadonly"
                   placeholder="@(string.IsNullOrWhiteSpace(Placeholder) ? " " : Placeholder)"
                   disabled="@FieldDisabled"
                   required="@IsRequired()"
                   minlength="@GetMinLength()"
                   maxlength="@GetMaxLength()"
                   min="@GetMinValue()"
                   max="@GetMaxValue()"
                   onkeydown="TnTComponents.enforcePhoneFormat(event)"
                   onkeyup="TnTComponents.formatToPhone(event)"
                   @bind-value:get="@CurrentValueAsString"
                   @bind-value:set="(newValue) => OnInputAsync(newValue)"
                   @bind-value:event="@(BindOnInput ? "oninput" : "onchange")"
                   @onblur="@(EditContext is not null ? (FocusEventArgs args) => EditContext.NotifyFieldChanged(FieldIdentifier) : (FocusEventArgs _) => { })"
                   @ref="Element" />
        }
        else {
            base.RenderInputElement(__builder);
        }
    }
}