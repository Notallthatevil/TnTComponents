@namespace TnTComponents
@using TnTComponents.Interfaces
@inherits InputFile
@implements ITnTPageScriptComponent<TnTInputFile>
@implements IAsyncDisposable

<label class="@ElementClass" title="@ElementTitle" lang="@ElementLang" id="@ElementId" style="@ElementStyle" @ref="_labelElement">
    @if (StartIcon is not null) {
        @StartIcon.Render("tnt-start-icon")
    }

    @base.BuildRenderTree

    @if (!string.IsNullOrWhiteSpace(SupportingText)) {
        <span class="tnt-supporting-text">
            @SupportingText
        </span>
    }

    @if (!string.IsNullOrWhiteSpace(Label)) {
        <span class="tnt-label">
            @Label
        </span>
    }

    @if (EndIcon is not null) {
        @EndIcon.Render("tnt-end-icon")
    }

    @if (ShowProgress && !string.IsNullOrWhiteSpace(ProgressTitle)) {
        <div class="tnt-input-progress">
            @if (ProgressTemplate is not null) {
                @ProgressTemplate(ProgressPercent > 0 ? ProgressFileDetails with { Percentage = ProgressPercent } : new ProgressFileDetails())
            }
            else {
                <div class="tnt-input-file-progress-title">
                    @ProgressTitle
                </div>
                <TnTProgressIndicator Appearance="ProgressAppearance.Linear" Value="@ProgressPercent" Max="100" min="0" />
            }
        </div>
    }
</label>

