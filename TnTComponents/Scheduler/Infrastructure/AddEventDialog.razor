@typeparam TEventType

<TnTForm Model="@Event" OnValidSubmit="SaveEventAsync">
    <DataAnnotationsValidator />
    @if (AddEventDialogTemplate is not null) {
        @AddEventDialogTemplate(Event)
    }
    else {
        <TnTRow>
            <TnTColumn S="12">
                <TnTLabel Label="Event Name">
                    <TnTInputText @bind-Value="@Event.Title" />

                </TnTLabel>
            </TnTColumn>
        </TnTRow>
        <TnTRow>
            <TnTColumn S="12">
                <TnTLabel Label="Event Start">
                    <TnTInputDateTimeOffset @bind-Value="@Event.Start" BindAfter="UpdateEndDate"/>
                </TnTLabel>
            </TnTColumn>
        </TnTRow>
        <TnTRow>
            <TnTColumn S="12">
                <TnTLabel Label="Event End">
                    <TnTInputDateTimeOffset @bind-Value="@Event.End" min="@(Event.Start.HasValue ? Event.Start.Value.AddMinutes(1).ToString("yyyy-MM-ddTHH:mm") : null)" />
                </TnTLabel>
            </TnTColumn>
        </TnTRow>
    }

    <TnTDivider style="margin: 0.5rem 0;" />

    <TnTButton BackgroundColor="TnTColor.Success" TextColor="TnTColor.OnSuccess" Type="ButtonType.Submit" style="float:right;margin-right:2rem;">
        @MaterialIcon.Save.Render()
        Save
    </TnTButton>
</TnTForm>
