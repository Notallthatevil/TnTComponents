@namespace TnTComponents
@using TnTComponents.Scheduler.Infrastructure
@inherits ScheduleViewBase

@if (Scheduler.IsSelectedView(this)) {
    <div @attributes="AdditionalAttributes" class="@CssClass" style="@CssStyle" @ref="Element">
        @{
            <div class="tnt-time-slots">
                <div class="tnt-slot tnt-header-slot"></div>
                @foreach (var time in GetTimeSlots()) {
                    _rows.TryAdd(time, default);
                    <div class="tnt-slot tnt-time-slot tnt-label-large" @ref="_rows[time]">
                        @time
                    </div>
                    Console.WriteLine($"Rendering time {_rows[time]} {_rows[time].Id}");
                }
            </div>
            @foreach (var date in GetVisibleDates()) {
                <div class="tnt-slot-column" @ref="_columns[(int)date.DayOfWeek]">
                    <div class="tnt-slot tnt-day-slot tnt-header-slot">
                        <div>
                            @date.ToString("dddd")
                        </div>
                        <div>
                            @date.ToString("dd")
                        </div>
                    </div>

                    @foreach (var time in GetTimeSlots()) {
                        @if (IsSlotDisabled(date, time)) {
                            <div class="tnt-slot tnt-day-slot disabled"></div>
                        }
                        else {
                            <div class="tnt-slot tnt-day-slot" @onclick="@(() => CreateEventAsync(date, time))"></div>
                        }
                    }

                    @foreach (var @event in Scheduler.GetEventsForDate(date)) {
                        <TnTScheduledEvent Event="@(@event)" ScheduleView="this" />
                    }
                </div>
            }
        }

    </div>
}