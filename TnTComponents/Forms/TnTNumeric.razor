@typeparam TNumberType
@inherits TnTInputField<TNumberType>

<div theme="@Theme" class="@GetCssClass()">
    @TnTIconComponent.GetIcon(IconType, Icon)
    <input aria-label="@Label"
           name="@NameAttributeValue"
           disabled="@Disabled"
           placeholder="@Placeholder"
           type="number"
           @ref="@InputElement"
           @bind="@CurrentValueAsString"
           @onfocusin="OnFocusInAsync"
           @onfocusout="OnFocusOutAsync" />

    <label class="@GetLabelCssClass()" @onclick="SetInputFocus">@Label</label>

    <div class="tnt-numeric-input-buttons">
        @switch (IconType) {
            case IconType.FontAwesome:
                <i class="fa fa-caret-up" @onmousedown="Increment" @onmouseup="@(() => _inAdjustment = false)" @onmouseout="@(() => _inAdjustment = false)"></i>
                <i class="fa fa-caret-down" @onmousedown="Decrement" @onmouseup="@(() => _inAdjustment = false)" @onmouseout="@(() => _inAdjustment = false)"></i>
                break;
            case IconType.MaterialIcons:
                <i class="material-icons" @onmousedown="Increment" @onmouseup="@(() => _inAdjustment = false)" @onmouseout="@(() => _inAdjustment = false)">arrow_drop_up</i>
                <i class="material-icons" @onmousedown="Decrement" @onmouseup="@(() => _inAdjustment = false)" @onmouseout="@(() => _inAdjustment = false)">arrow_drop_down</i>
                break;
        }
    </div>

</div>
@if (ShowValidation) {
    <ValidationMessage class="@GetValidationMessageCssClass()" theme="@Theme" For="ValueExpression" />
}