@inherits TnTTextBox
@{
    base.BuildRenderTree(__builder);
}
@code {
    protected override RenderFragment GetAdditionalMarkup() {
        if (AllowPasswordReveal) {
            return
    @<button type="button"
                         class="tnt-password-reveal"
                         @onmousedown="@(()=>PasswordRevealed = true)"
                         @onmouseup="@(()=>PasswordRevealed=false)"
                         @onmouseout="@(()=>PasswordRevealed=false)">
        @GetPasswordRevealIcon()
    </button>;
        }
        else {
            return default!;
        }
    }


    private RenderFragment GetPasswordRevealIcon() {
        switch (IconType) {
            case IconType.FontAwesome:
                return @<i class="fa fa-eye@(PasswordRevealed ? "-slash" : string.Empty)"></i>;
            case IconType.MaterialIcons:
                if (PasswordRevealed) {
                    return @<i class="material-icons">visibility_off</i>;
                }
                else {
                    return@<i class="material-icons">visibility</i>;
                }
            default:
                throw new NotImplementedException();
        }
    }
}
