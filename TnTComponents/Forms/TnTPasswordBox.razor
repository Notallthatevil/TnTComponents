@inherits TnTTextBox

<div theme="@Theme" class="@GetCssClass()">
    @TnTIconComponent.GetIcon(IconType, Icon)
    <input aria-label="@Label"
           type="@(PasswordRevealed ? "text" : "password")"
           name="@NameAttributeValue"
           disabled="@Disabled"
           placeholder="@Placeholder"
           @ref="@InputElement"
           @bind="@CurrentValueAsString"
           @onfocusin="OnFocusInAsync"
           @onfocusout="OnFocusOutAsync" />

    <label class="@GetLabelCssClass()" @onclick="SetInputFocus">@Label</label>

    @switch (IconType) {
        case IconType.FontAwesome:
            <i class="tnt-password-reveal fa fa-eye@(PasswordRevealed ? "-slash" : string.Empty)"
               @onmousedown="@(() => PasswordRevealed = true)"
               @onmouseup="@(() => PasswordRevealed = false)"
               @onmouseout="@(() => PasswordRevealed = false)"></i>
            break;

        case IconType.MaterialIcons:
            <i class="tnt-password-reveal material-icons" @onmousedown="@(() => PasswordRevealed = true)"
               @onmouseup="@(() => PasswordRevealed = false)"
               @onmouseout="@(() => PasswordRevealed = false)">
                @if (PasswordRevealed) {
                    <text>visibility_off</text>
                }
                else {
                    <text>visibility</text>
                }
            </i>
            break;

        default:
            throw new NotImplementedException();
    }


</div>
<ValidationMessage class="@GetValidationMessageCssClass()" theme="@Theme" For="ValueExpression" />
