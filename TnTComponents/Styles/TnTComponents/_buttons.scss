@use "sass:map";

button[is=tnt-button], input::file-selector-button {
    outline: none;
    appearance: none;
    border: none;
    user-select: none;
    min-height: 2.5rem;
    min-width: 2.5rem;
    padding: 0 1rem;
    margin: 0.5rem;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    vertical-align: bottom;

    @extend .tnt-label-large;

    &:not(:disabled) {
        cursor: pointer;
        transition: box-shadow linear 100ms, background-color linear 100ms;

        &:hover {
            @for $i from 0 through 9 {
                &.tnt-elevation-#{$i} {
                    box-shadow: map.get($elevation-shadows, $i + 1);
                }
            }
        }
    }

    &:not(.tnt-fab) {
        .tnt-icon:first-child {
            padding-right: 0.5rem;
        }

        .tnt-icon:last-child {
            padding-left: 0.5rem;
        }
    }

    &.tnt-fab {
        border-radius: 50%;
        padding: 0.25rem;
        position: fixed;
        right: 2rem;
        bottom: 2rem;
        z-index: 1000;
        transition: right ease-in-out 200ms;

        @extend .tnt-elevation-1;
    }
}

button.tnt-components {
    &:disabled {
        cursor: not-allowed;

        &:not(:has( > progress.tnt-components)) {
            opacity: 0.3;
        }

        &:has( > progress.tnt-components) {
            @each $colorClass in $color-classes-no-transparent {
                &.tnt-actionable-bg-color-#{$colorClass} {
                    background-color: color-mix(in srgb, var(--tnt-color-#{$colorClass}) 30%, transparent);
                }
            }
        }
    }

    & > progress.tnt-components {
        position: absolute !important;
        z-index: 5;
        padding: 0 !important;
        margin: 0;

        &:not(.tnt-alternative) {
            width: 2rem !important;
            height: 2rem !important;
        }
    }

    &.tnt-actionable-bg-color-primary:not(:disabled) {
        & > progress.tnt-components {
            &.tnt-alternative {
                color: $tnt-color-on-primary;

                &::-moz-progress-bar {
                    background: $tnt-color-on-primary;
                }

                &::-webkit-progress-value {
                    background: $tnt-color-on-primary;
                }

                &:indeterminate {
                    &:before {
                        background-color: $tnt-color-on-primary;
                    }

                    &:after {
                        background-color: $tnt-color-on-primary;
                    }
                }
            }

            &:not(.tnt-alternative) {
                color: $tnt-color-on-primary;


                &:not(:indeterminate) {
                    background-color: $tnt-color-on-primary;
                    -webkit-mask: radial-gradient(circle, transparent 0 1.6rem, black 1.6rem 100%);
                    mask: radial-gradient(circle, transparent 0 1.6rem, black 1.6rem 100%);
                    transform: scale(0.8);
                }
            }
        }
    }
}

tnt-layout:has(tnt-footer) {
    .tnt-fab {
        bottom: calc(2rem + $tnt-footer-height) !important;
    }
}

body:has(div.tnt-snackbar-container) {
    tnt-button.tnt-fab {
        right: 24rem;
    }
}
