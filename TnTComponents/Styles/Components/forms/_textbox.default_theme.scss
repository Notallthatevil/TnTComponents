.tnt-form-field[theme=default] {
    border-bottom-color: $tnt-color-outline;

    ::placeholder {
        color: color.adjust($tnt-color-on-surface, $alpha: -0.6);
    }

    &:not(.disabled) {
        i:not(.tnt-icon-component) {
            color: $tnt-color-on-surface;
            @include colorizeTransparent($tnt-color-surface, $hover:true, $active:true);
        }
    }

    input {
        color: $tnt-color-on-surface;
    }

    & > .tnt-form-field-label {
        color: $tnt-color-on-primary-container;
    }

    i {
        color: $tnt-color-on-surface;
    }

    &.modified.invalid:not(.active) {
        border-bottom-color: $tnt-color-error;

        & > .tnt-form-field-label {
            color: $tnt-color-error;
        }

        &.disabled {
            border-bottom-color: color.adjust($tnt-color-error, $alpha: -0.6);

            & > .tnt-form-field-label {
                color: color.adjust($tnt-color-error, $alpha: -0.6);
            }
        }

        &.outlined {
            border-color: $tnt-color-error;
            background-color: $tnt-color-error-container;

            & > .tnt-form-field-label {
                background-color: $tnt-color-error-container;
                color: $tnt-color-on-error-container;
            }

            input {
                color: $tnt-color-on-error-container;
            }

            &.disabled {
                border-color: color.adjust($tnt-color-error, $alpha: -0.6);
                background-color: color.adjust($tnt-color-error-container, $lightness: -20%);

                & > .tnt-form-field-label {
                    background-color: color.adjust($tnt-color-error-container, $lightness: -20%);
                    color: color.adjust($tnt-color-on-error-container, $alpha: -0.6);
                    border-top: 1px solid color.adjust($tnt-color-error, $alpha: -0.6);
                }

                input {
                    color: color.adjust($tnt-color-on-error-container, $alpha: -0.6);
                }
            }
        }

        &.filled {
            background-color: $tnt-color-error-container;

            input {
                color: $tnt-color-on-error-container;
            }

            &.disabled {
                background-color: color.adjust($tnt-color-error-container, $alpha: -0.6);

                input {
                    color: color.adjust($tnt-color-on-error-container, $alpha: -0.6);
                }
            }
        }
    }

    &.disabled {
        border-bottom-color: color.adjust($tnt-color-outline, $alpha: -0.6);

        i, input, > .tnt-form-field-label {
            color: color.adjust($tnt-color-on-primary-container, $alpha: -0.6);
        }
    }

    &.active {
        border-bottom-color: $tnt-color-primary;
        box-shadow: 0 1px 0 0 $tnt-color-primary;

        &.outlined {
            border-color: $tnt-color-primary;
            box-shadow: 0 0 1px 1px $tnt-color-primary;
        }

        & > .tnt-form-field-label {
            &.active {
                color: $tnt-color-primary;
            }
        }
    }

    &.outlined {
        border-color: $tnt-color-outline;

        & > .tnt-form-field-label {
            background-color: $tnt-color-surface;
        }

        &.disabled {
            border-color: color.adjust($tnt-color-outline, $alpha: -0.7);
        }
    }

    &.filled {
        background-color: $tnt-color-primary-container;

        i, input {
            color: $tnt-color-on-primary-container;
        }

        &.disabled {
            background-color: color.adjust($tnt-color-primary-container, $alpha: -0.6);

            i, input {
                color: color.adjust($tnt-color-on-primary-container, $alpha: -0.6);
            }
        }
    }

    .tnt-password-reveal {
        @include colorizeTransparent($tnt-color-on-surface, $hover:true, $active:true);
    }
}