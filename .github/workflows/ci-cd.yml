name: Create Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
          fetch-depth: 0

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3.1.1
      with:
        versionSpec: '6.0.x'

    - name: Determine Version
      id: version_step # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v3.1.1

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '10.x'

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.x'

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release

    - name: Run dotnet tests with coverage
      run: dotnet test --no-build --configuration Release

    - name: Install dotnet-coverage
      run: dotnet tool install --global dotnet-coverage

    - name: Check code coverage
      run: |
        dotnet-coverage merge TestResults/**/*.coverage -f cobertura -o coverage.cobertura.xml
        dotnet-coverage check coverage.cobertura.xml --threshold 90 --threshold-type line --threshold-stat total

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Run npm tests
      run: |
        npm install
        npm test

    - name: Bump version and push tag
      if: github.ref == 'refs/heads/main'
      uses: anothrNick/github-tag-action@v1 # Don't use @master or @v1 unless you're happy to test the latest version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if you don't want to set write permissions use a PAT token
        WITH_V: false
        CUSTOM_TAG: 'v${{ steps.version_step.outputs.MajorMinorPatch }}'

    - name: Publish TnTComponents to NuGet
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: |
        dotnet pack TnTComponents/TnTComponents.csproj --configuration Release --output ./nupkg /p:PackageVersion=${{ steps.version_step.outputs.MajorMinorPatch }}
        dotnet pack TnTComponents.AspNetCore/TnTComponents.AspNetCore.csproj --configuration Release --output ./nupkg /p:PackageVersion=${{ steps.version_step.outputs.MajorMinorPatch }}
        dotnet pack TnTComponents.Extensions/TnTComponents.Extensions.csproj --configuration Release --output ./nupkg /p:PackageVersion=${{ steps.version_step.outputs.MajorMinorPatch }}
    - run: dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

    - name: Create GitHub Release
      if: github.ref == 'refs/heads/main'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version_step.outputs.MajorMinorPatch }}
        release_name: Release v${{ steps.version_step.outputs.MajorMinorPatch }}
        body: |
          Release v${{ steps.version_step.outputs.MajorMinorPatch }}
        draft: false
        prerelease: false